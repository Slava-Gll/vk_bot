import requests
import vk_api
from random import randint
import string
import re
import dataset
import os
import sys
import wikipedia
wikipedia.set_lang("ru")
import time
import glob
import ntpath
try:
    import cfg_my as cfg
except Exception:
    import cfg

path = os.getcwd() + '\\logs'
from colorama import Fore, Back, Style, init
init(autoreset=True)
print(Fore.GREEN + 'BOT IS STARTING...')
GROUP_ID = cfg.GROUP_ID
GROUP_API_KEY = cfg.GROUP_API_KEY
USER_API_KEY =  cfg.USER_API_KEY
API_VER = cfg.API_VER
ADMINS = cfg.ADMINS

print(Fore.YELLOW + 'GROUP ID: ' + str(GROUP_ID))
print(Fore.YELLOW + 'API VER.' + API_VER)
st = "ADMINS: "
for i in ADMINS:
    st+=str(i) + ', '
print(Fore.YELLOW + st)


def help():
    a = "–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–º–∞–Ω–¥–∞–º –±–æ—Ç–∞:\n"
    a+="üí†.—Ä–µ–≥ - –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è\n"
    a+="üí†.—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ - –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏—è\n"
    a+="üí†.–ø–æ–∑–≤–∞—Ç—å <>- —É–ø–æ–º—è–Ω—É—Ç—å –≤—Å–µ—Ö c —Å–æ–æ–±—â–µ–Ω–∏–µ–º <>\n"
    a+="üí†.–≤–∏–∫–∏ <>- —Å–≤–æ–¥–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ <>\n"
    a+="üí†.—Ä–∞–Ω–¥–æ–º–≤–∏–∫–∏ - —Å–ª—É—á–∞–π–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤–∏–∫–∏\n"
    a+="üí†.–≥–µ–π - —Ç–µ—Å—Ç –Ω–∞ –≥–µ—è\n"
    a+="üí†.–±–∞–ª–∞–Ω—Å - —É–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å\n"
    a+="üí†.—Ç–æ–ø n - —Ç–æ–ø n –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –±–∞–ª–∞–Ω—Å—É\n"
    a+="üí†.–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å - –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è\n"
    a+="üí†.–∑–∞–ø–ª–∞—Ç–∏—Ç—å @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å- –∑–∞–ø–ª–∞—Ç–∏—Ç—å @\n"
    a+="üí†.–∑–∞–ª–æ–≥ @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å- –≤–Ω–µ—Å—Ç–∏ –∑–∞–ª–æ–≥ –∑–∞ @\n"
    a+="üí†.—Ä–∞–±–æ—Ç–∞ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è - —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É\n"
    a+="üí†.—Ä–∞–±–æ—Ç–∞ —É–≤–æ–ª–∏—Ç—å—Å—è - —É–≤–æ–ª–∏—Ç—å—Å—è —Å —Ä–∞–±–æ—Ç—ã\n"
    a+="üí†.—Ä–∞–±–æ—Ç–∞—Ç—å - –ø–æ–π—Ç–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É\n"
    a+="üí†.–≥—É–ª—è—Ç—å - –≤—ã–π—Ç–∏ –Ω–∞ —É–ª–∏—Ü—É\n"
    a+="üí†.—Ç–æ–≤–∞—Ä—ã - —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤\n"
    a+="üí†.–∫—É–ø–∏—Ç—å <>-–∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä\n"
    a+="üí†.—Ç–æ–ø - —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –±–∞–ª–∞–Ω—Å—É\n"
    a+="üí†.–∫–∞–∑–Ω–∞ - —É–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å –∫–∞–∑–Ω—ã\n"
    a+="üí†.–∫–∞–∑–Ω–∞ –æ–≥—Ä–∞–±–∏—Ç—å - –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –æ–≥—Ä–∞–±–∏—Ç—å –∫–∞–∑–Ω—É\n"
    a+="üí†.—Å–∞–º–æ—É–±–∏–π—Å—Ç–≤–æ - —Å–∞–º–æ—É–±–∏–π—Å—Ç–≤–æ\n"
    a+="üí†.–≤–∑–æ—Ä–≤–∞—Ç—å - –≤–∑–æ—Ä–≤–∞—Ç—å –≤—Å–µ—Ö\n"
    a+="üí†.–≤—ã—Å—Ç—Ä–µ–ª–∏—Ç—å @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å- –≤—ã—Å—Ç—Ä–µ–ª–∏—Ç—å –≤ @\n"
    a+="üí†.–≤—ã—Å—Ç—Ä–µ–ª–∏—Ç—å —Ä–∞–Ω–¥–æ–º - –≤—ã—Å—Ç—Ä–µ–ª–∏—Ç—å –≤ –∫–æ–≥–æ-—Ç–æ\n"
    a+="üí†.–≤—ã—Å—Ç—Ä–µ–ª–∏—Ç—å —Ä–∞–Ω–¥–æ–º - –≤—ã—Å—Ç—Ä–µ–ª–∏—Ç—å –≤ –∫–æ–≥–æ-—Ç–æ\n"
    a+="üí†.–ø–æ–º–æ—â—å - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
    a+="–¢–û–õ–¨–ö–û –ê–î–ú–ò–ù–´:\n"
    a+="‚öô.set <> <> - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ(–±–µ–∑ 2 –∞—Ä–≥—É–º–µ–Ω—Ç–∞ - —É–∑–Ω–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ)\n"
    return a


settings = None
def initialize_settings():
    global settingst
    global settings
    class settings_class:
        min_salary=settingst.find_one(name="min_salary")['val']
        max_salary=settingst.find_one(name="max_salary")['val']
        salary_cooldown=settingst.find_one(name="salary_cooldown")['val']
        hit_chance=settingst.find_one(name="hit_chance")['val']
        rob_chance=settingst.find_one(name="rob_chance")['val']
        wiki_cost=settingst.find_one(name="wiki_cost")['val']
        random_wiki_cost=settingst.find_one(name="random_wiki_cost")['val']
        nds=settingst.find_one(name="nds")['val']
        zalog_cost=settingst.find_one(name="zalog_cost")['val']
    settings = settings_class()

def path_leaf(path):
    head, tail = ntpath.split(path)
    return tail or ntpath.basename(head)

if not os.path.exists("logs"):
    os.mkdir('logs')

logs = [f for f in glob.glob(path + "**/*.txt", recursive=False)]
if logs == []:
    main_log_name = 'logs\\log1.txt'
else:
    logs = [path_leaf(path) for path in logs]
    logs = [i.replace('log', '') for i in logs]
    logs = [i[:-4] for i in logs]
    logs = [int(i) for i in logs]
    log_max = max(logs) + 1
    main_log_name = 'logs\\log' + str(log_max) + '.txt'
log_file = open(main_log_name,"w")
log_file.close()

def log(text,log_file):
    with open(log_file, "a") as file_object:
        file_object.write(str(text) + '\n')

def cr(name):
    if not os.path.exists(name):
        global db
        db = dataset.connect('sqlite:///' + name)
        global table
        table = db['users']
        table.insert(dict(id=0))
        print(Fore.YELLOW + "–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö " + name + " —Å–æ–∑–¥–∞–Ω–∞")
        table.delete(id=0)
        db.executable.close()
        return True

cr("settings.sqlite")
sdb = dataset.connect('sqlite:///settings.sqlite')
settingst = sdb['users']
if not settingst.find_one(name="created"):
    settingst.insert(dict(name="created",val=0,flag=False))
    settingst.insert(dict(name="min_salary",val=5,flag=False))
    settingst.insert(dict(name="max_salary",val=50,flag=False))
    settingst.insert(dict(name="salary_cooldown",val=30,flag=False))
    settingst.insert(dict(name="hit_chance",val=30,flag=False))
    settingst.insert(dict(name="rob_chance",val=40,flag=False))
    settingst.insert(dict(name="wiki_cost",val=50,flag=False))
    settingst.insert(dict(name="random_wiki_cost",val=20,flag=False))
    settingst.insert(dict(name="nds",val=17,flag=False))
    settingst.insert(dict(name="kazna",val=0,flag=False))
    settingst.insert(dict(name="zalog_cost",val=1500,flag=False))
initialize_settings()


cr("users.sqlite")
dbmon = dataset.connect('sqlite:///users.sqlite')
montable = dbmon['users']
montable.insert(dict(id=0,vid=0,balance=100,q=1.1,last=0,job=False,gay=0,mention=True,worked_num=0,work_rank=1,name="",sname="",jail=False))
montable.delete(id=0)


cr("inventory.sqlite")
dbinv = dataset.connect('sqlite:///inventory.sqlite')
inventory = dbinv['users']
inventory.insert(dict(id=0,vid=0,–ø–∏—Å—Ç–æ–ª–µ—Ç=0,–ø–∞—Ç—Ä–æ–Ω=0,—Å–ª–∏—Ç–æ–∫999=0,–±–æ–º–±–∞=0))
inventory.delete(id=0)


f = cr("tovary.sqlite")
dbtov = dataset.connect('sqlite:///tovary.sqlite')
tovary = dbtov['list']
tovary.insert(dict(id=0,name="—Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä",cnt=0,cost=999,act=0,exp="—Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç"))
tovary.delete(id=0)
if f:
    tovary.insert(dict(name="—à–∞–≤–∞",cnt=0,cost=150,act=0,exp="–≤—ã –∫—É–ø–∏–ª–∏ —à–∞–≤—É –∑–∞ 150‚ÇΩ –∏ —Å—ä–µ–ª–∏ –µ–µ\n–±—ã–ª–æ –æ—á–µ–Ω—å –≤–∫—É—Å–Ω–æ"))
    tovary.insert(dict(name="–ø–∏—Å—Ç–æ–ª–µ—Ç",cnt=0,cost=73649,act=1,exp="–≤—ã –∫—É–ø–∏–ª–∏ Smith & Wesson .500 S&W Magnum –∑–∞ 73649‚ÇΩ"))
    tovary.insert(dict(name="–ø–∞—Ç—Ä–æ–Ω",cnt=0,cost=147,act=2,exp="–≤—ã –∫—É–ø–∏–ª–∏ –æ–¥–∏–Ω –ø–∞—Ç—Ä–æ–Ω –¥–ª—è Smith & Wesson .500 S&W Magnum –∑–∞ 147‚ÇΩ"))
    tovary.insert(dict(name="–≤–æ–ª–∫",cnt=0,cost=50,act=3,exp="–≤—ã –∫—É–ø–∏–ª–∏ –≤–æ–ª–∫–∞ –∑–∞ 50‚ÇΩ"))
    tovary.insert(dict(name="–º–µ–º",cnt=0,cost=50,act=4,exp="–≤—ã –∫—É–ø–∏–ª–∏ –º–µ–º –∑–∞ 50‚ÇΩ"))
    tovary.insert(dict(name="–∞–Ω–≥–ª–∏–π—Å–∫–∏–π –º–µ–º",cnt=0,cost=50,act=5,exp="–≤—ã –∫—É–ø–∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –º–µ–º –∑–∞ 50‚ÇΩ"))
    tovary.insert(dict(name="–≤–∏–¥–æ—Å–∏–∫",cnt=0,cost=100,act=6,exp="–≤—ã –∫—É–ø–∏–ª–∏ –≤–∏–¥–æ—Å–∏–∫ –∑–∞ 100‚ÇΩ"))
    tovary.insert(dict(name="–∑–æ–ª–æ—Ç–æ–π —Å–ª–∏—Ç–æ–∫",cnt=0,cost=4000000,act=7,exp="–≤—ã –∫—É–ø–∏–ª–∏ 1 –∫–≥ –∑–æ–ª–æ—Ç–∞ 999 –ø—Ä–æ–±—ã –∑–∞ 4000000‚ÇΩ"))
    tovary.insert(dict(name="–≤–æ–¥–æ—Ä–æ–¥–Ω–∞—è –±–æ–º–±–∞",cnt=0,cost=30000000,act=8,exp="–≤—ã –∫—É–ø–∏–ª–∏ –±–æ–º–±—É –∑–∞ 30000000‚ÇΩ"))
    tovary.insert(dict(name="–º–∞—à–∏–Ω–∞",cnt=0,cost=1000000,act=0,exp="–≤—ã –∫—É–ø–∏–ª–∏ –º–∞—à–∏–Ω—É –∑–∞ 1000000‚ÇΩ"))
    tovary.insert(dict(name="–∫–≤–∞—Ä—Ç–∏—Ä–∞",cnt=0,cost=2000000,act=0,exp="–≤—ã –∫—É–ø–∏–ª–∏ –∫–≤–∞—Ä—Ç–∏—Ä—É –∑–∞ 2000000‚ÇΩ"))

vk_session = vk_api.VkApi(token=GROUP_API_KEY, api_version=API_VER)
vk_user_session = vk_api.VkApi(token=USER_API_KEY, api_version=API_VER)

def nr():
    snd("–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã ‚ö†\n–Ω–∞–ø–∏—à–∏—Ç–µ .—Ä–µ–≥",event,True)

def nr_other():
    snd("–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω ‚ö†",event,True)

def goods():
    global tovary
    goods = tovary.distinct('name','cost')
    st = "–¢–æ–≤–∞—Ä—ã:\n"
    for i in goods:
        st += i['name'] + ". –¶–µ–Ω–∞: " + str(i['cost']) + '‚ÇΩ\n'
    return st


def top(n):
    global montable
    users = montable.distinct('balance','name','sname')
    users_tuple = []
    for i in users:
        users_tuple.append((i['name']+" "+i['sname'],int(i['balance'])))
    users_tuple = sorted(users_tuple, key=lambda balance: balance[1],reverse=True)[:n]
    st = "–¢–æ–ø " + str(len(users_tuple)) + ":\n"
    for i in users_tuple:
        st += i[0] + ': ' + str(i[1]) + '‚ÇΩ\n'
    return st


def random_user(event,usr):
    global montable
    info = vk.messages.getConversationMembers(peer_id=event.message["peer_id"],group_id=GROUP_ID)
    user = int(info['items'][randint(0,info['count']-1  )]['member_id'])
    while not montable.find_one(vid=user) and user==usr:
        user = int(info['items'][randint(0,info['count']-1  )]['member_id'])

    return user


def ask_money(n,usr,tusr):
    bal = int(tusr['balance'])
    if bal>=n:
        bal = take_money(n,bal,usr)
        snd("–°–ø–∏—Å–∞–Ω–æ " + str(n) + "‚ÇΩ\n–≤–∞—à –±–∞–ª–∞–Ω—Å: " + str(bal)+'‚ÇΩ',event,True)
        return True
    else:
        snd("–≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ üí∞\n–≤–∞—à –±–∞–ª–∞–Ω—Å: " + str(bal)+'‚ÇΩ',event,True)
        return False

def take_money(n,bal,usr):
    global montable
    bal = int(bal) - int(n)
    data = dict(vid=usr, balance=bal)
    montable.update(data, ['vid'])
    return bal

def give_money(n,bal,usr):
    global montable
    bal = int(bal) + int(n)
    data = dict(vid=usr, balance=bal)
    montable.update(data, ['vid'])
    return bal

def pict(group_id):
    suc = False
    vk_user = vk_user_session.get_api()
    pid=None
    while not suc and pid=="" or pid==None:
        try:
            p = vk_user.wall.get(owner_id=group_id,count=1,offset=randint(0,500))
            pid = p['items'][0]['attachments'][0]['photo']['id']
            suc = True
        except Exception:
            print(Fore.YELLOW + '–ö–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
            time.sleep(0.5)
    vk.messages.send(chat_id=event.chat_id, random_id = randint(-2147483648, 2147483647),attachment='photo' + str(group_id) + '_' + str(pid))


def vid(group_id):
    suc = False
    vk_user = vk_user_session.get_api()
    pid=None
    while not suc and pid=="" or pid==None:
        try:
            p = vk_user.wall.get(owner_id=group_id,count=1,offset=randint(0,500))
            pid = p['items'][0]['attachments'][0]['video']['id']
            suc = True
        except Exception:
            print(Fore.YELLOW + '–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
            time.sleep(0.5)
    vk.messages.send(chat_id=event.chat_id, random_id = randint(-2147483648, 2147483647),attachment='video' + str(group_id) + '_' + str(pid))


def kill(usr):
    global montable
    global inventory
    if usr == "kill everybody":
        montable.delete()
        inventory.delete()
    else:
        montable.delete(vid=usr)
        inventory.delete(vid=usr)

def jail(usr):
    global montable
    data = dict(vid=usr, jail=True)
    montable.update(data, ['vid'])

def unjail(usr):
    global montable
    data = dict(vid=usr, jail=False)
    montable.update(data, ['vid'])

def act(n,usr,tusr,event):
    global tovary
    global inventory
    if n == 1:
        num = inventory.find_one(vid=usr)['–ø–∏—Å—Ç–æ–ª–µ—Ç']
        data = dict(vid=usr, –ø–∏—Å—Ç–æ–ª–µ—Ç=num+1)
        inventory.update(data, ['vid'])
    elif n == 2:
        num = inventory.find_one(vid=usr)['–ø–∞—Ç—Ä–æ–Ω'] + 1
        data = dict(vid=usr, –ø–∞—Ç—Ä–æ–Ω=num)
        inventory.update(data, ['vid'])

    elif n == 3:
        pict(-173649272)

    elif n == 4:
        pict(-163452344)

    elif n == 5:
        pict(-150550417)

    elif n == 6:
        vid(-30316056)

    elif n == 7:
        num = inventory.find_one(vid=usr)['—Å–ª–∏—Ç–æ–∫999']
        if num:
            num+=1
        else:
            num = 1
        data = dict(vid=usr, —Å–ª–∏—Ç–æ–∫999=num)
        inventory.update(data, ['vid'])

    elif n == 8:
        num = inventory.find_one(vid=usr)['–±–æ–º–±–∞']
        if num:
            num+=1
        else:
            num = 1
        data = dict(vid=usr, –±–æ–º–±–∞=num)
        inventory.update(data, ['vid'])



def get_nick(usr,dog):
    global tusr
    if dog:
        nick = "@" + vk.users.get(user_ids=int(usr),fields="screen_name")[0]["screen_name"]
    else:
        if tusr:
            nick = tusr['name']
    return nick

def snd(text,event,tag):
    global mention
    global main_log_name
    if tag:
        text =get_nick(event.message['from_id'],mention) + ", " + text
    vk.messages.send(chat_id=event.chat_id, message=text, random_id = randint(-2147483648, 2147483647))
    try:
        log(text,main_log_name)
    except Exception:
        pass

def call(event):
    user_msg = "{0}".format(event.message["text"]) 
    msg = user_msg.replace('.–ø–æ–∑–≤–∞—Ç—å', '')
    try:
        msg = msg[1:]
    except Exception:
        pass
    ni = vk.messages.getConversationmembers(peer_id=event.message["peer_id"],fields="screen_name")["profiles"]
    ustr = ""
    for user in ni:
        ustr += "@" + user["screen_name"] + " "
    if msg != "":
        ustr += "\n" + msg
    snd(ustr,event,False)

from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
while True:
 try:
    print(Fore.MAGENTA + "LONG POLL GET")
    longpoll = VkBotLongPoll(vk_session,group_id=GROUP_ID)
    print(Fore.MAGENTA + "LONG POLL SET")
    vk = vk_session.get_api()
    print(Fore.GREEN + "CONNECTED")
    for event in longpoll.listen():
        #print(event)
        try:
            try:
                #print(event)
                if event.message['action']['type']=='chat_invite_user':
                    usr = event.message['action']['member_id']
                    
                    if usr == -GROUP_ID:
                        snd("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –±–æ—Çüòé\n—á—Ç–æ–±—ã —è –º–æ–≥ –≤–∏–¥–µ—Ç—å –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–¥–µ–ª–∞–π—Ç–µ –º–µ–Ω—è –∞–¥–º–∏–Ω–æ–º.",event,False)
                        snd(help(),event,False)
                    else:
                        user = vk.users.get(user_ids=usr)[0]
                        name = user['first_name']
                        snd("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, " + name + '.',event,False)
                        snd(help(),event,False)
                if event.message['action']['type']=='chat_invite_user_by_link':
                    snd("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤–æ—Ç –≤–∞–º —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –º–æ–∏–º –∫–æ–º–º–∞–Ω–¥–∞–ºüòã",event,False)
                    snd(help(),event,False)


            except Exception:
                pass
            if event.type == VkBotEventType.MESSAGE_NEW and event.message["text"]!="":
                if event.from_user:
                    from_chat = False
                    vk.messages.send(user_id=event.message['from_id'], message="–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –±–µ—Å–µ–¥\n–Ω–µ –ø–∏—à–∏—Ç–µ —Å—é–¥–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è", random_id = randint(-2147483648, 2147483647))   
                if event.from_chat:
                    from_chat = True
                    mes =  event.message["text"].lower()
                    if mes.startswith('.'):
                        ctime = time.time()
                        usr = int(event.message['from_id'])
                        tusr = montable.find_one(vid=usr)
                        inv = inventory.find_one(vid=usr)
                        log_simple = Fore.CYAN + 'vk.com/id' + str(usr) + ' --> ' + Style.BRIGHT + Fore.WHITE + event.message["text"]
                        log_string = str(ctime)+ '  ' + 'vk.com/id' + str(usr) + ' --> ' + event.message["text"]
                        print(log_simple)
                        #print(event)
                        log(log_string,main_log_name)
                        if tusr:
                            mention = tusr['mention']
                            if tusr['jail']:
                                mes = ".JAILED"
                        else:
                            mention = True


                        try:
                            (cmd, args) = mes.split(maxsplit=1)
                        except:
                            cmd = mes
                            args = None

                        if cmd == '.–ø–æ–∑–≤–∞—Ç—å':
                            call(event)

                        if cmd == '.–≤–∑–æ—Ä–≤–∞—Ç—å':
                            if tusr:
                                if inv['–±–æ–º–±–∞']:
                                    snd("–≤—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –≤–æ–¥–æ—Ä–æ–¥–Ω—É—é –±–æ–º–±—É",event,True)
                                    time.sleep(2)
                                    snd("–æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç –∑–∞–ø—É—â–µ–Ω",event,False)
                                    time.sleep(2)
                                    for i in reversed(range(1,11)):
                                        snd(str(i),event,False)
                                        time.sleep(1)
                                    snd("–í–ó–†–´–í",event,False)
                                    snd("–í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –≤–∑—Ä—ã–≤–∞ –≤–æ–¥–æ—Ä–æ–¥–Ω–æ–π –±–æ–º–±—ã –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–≥–∏–±–ª–∏\n–æ–±—ä—è–≤–ª—è–µ—Ç—Å—è –º–∏–Ω—É—Ç–∞ –º–æ–ª—á–∞–Ω–∏—è",event,False)
                                    kill('kill everybody')
                                    time.sleep(60)
                                    snd("–º–∏–Ω—É—Ç–∞ –º–æ–ª—á–∞–Ω–∏—è –æ–∫–æ–Ω—á–µ–Ω–∞",event,False)
                                else:
                                    snd("—É –≤–∞—Å –Ω–µ—Ç –≤–æ–¥–æ—Ä–æ–¥–Ω–æ–π –±–æ–º–±—ã.",event,True)
                            else:
                                nr()

                        elif cmd == '.JAILED':
                            snd("–≤—ã –≤ —Ç—é—Ä—å–º–µ\n–¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –≤–Ω–µ—Å—Ç–∏ –∑–∞ –≤–∞—Å –∑–∞–ª–æ–≥",event,True)

                        elif cmd == '.—Ç–æ–ø':
                            if args:
                                try:
                                    n = int(args)
                                    st = top(n)
                                    snd(st,event,False)
                                except Exception:
                                    st = '–Ω–µ–≤–µ—Ä–Ω–æ–µ —á–∏—Å–ª–æ'
                                    snd(st,event,True)
                            else:
                                st = top(10)
                                snd(st,event,False)


                        elif cmd == '.–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å':
                            if tusr:    
                                inv.pop('vid')
                                inv.pop('id')
                                st = "–≤–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:\n"
                                count = 0
                                for i in inv:
                                    val = inv[i]
                                    if val:
                                        if val > 0:
                                            st += str(i) + ': ' + str(val) + '\n'
                                            count+=1
                                if count > 0:
                                    snd(st,event,True)
                                else:
                                    snd("–≤–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç",event,True)
                            else:
                                nr()

                        elif cmd == '.—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ':
                            if tusr:
                                mention = not bool(tusr['mention'])
                                data = dict(vid=usr, mention=mention)
                                montable.update(data, ['vid'])
                                if mention:
                                    snd("—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ",event,True)
                                else:
                                    snd("—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ",event,True)
                            else:
                                nr()


                        elif cmd == '.—Å–∞–º–æ—É–±–∏–π—Å—Ç–≤–æ':
                            snd(get_nick(usr,mention) + " —É–±–∏–ª —Å–µ–±—è\n—Ç–∞–∫–æ–≤–∞ –∂–∏–∑–Ω—å\n—É –Ω–µ–≥–æ –±—ã–ª–æ " + str(tusr['balance']) +'‚ÇΩ',event,False)
                            kill(usr)


                        elif cmd == '.–≤—ã—Å—Ç—Ä–µ–ª–∏—Ç—å':
                            if tusr:
                                f = False
                                if args == '—Ä–∞–Ω–¥–æ–º':
                                    reciever = random_user(event,usr)
                                elif args:
                                    reciever = re.findall(r'\[id(\d*)\|.*]', args)[0]
                                else:
                                    snd(".–≤—ã—Å—Ç—Ä–µ–ª–∏—Ç—å @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",event,True)
                                    f = True
                                if not f:
                                    reciever_t = montable.find_one(vid=reciever)
                                    if reciever_t: 
                                        if inv['–ø–∏—Å—Ç–æ–ª–µ—Ç']:
                                            if inv['–ø–∞—Ç—Ä–æ–Ω']>0:
                                                money_killer = tusr['balance']
                                                money_killed = reciever_t['balance']
                                                chance = randint(0,100)
                                                data = dict(vid=usr, –ø–∞—Ç—Ä–æ–Ω=inv['–ø–∞—Ç—Ä–æ–Ω']-1)
                                                inventory.update(data, ['vid'])
                                                if chance < settings.hit_chance:
                                                    kill(reciever)
                                                    money_killer = give_money(money_killed,money_killer,usr)
                                                    snd(get_nick(usr,mention) + " —É–±–∏–ª " + get_nick(reciever,True) + ' üíÄ\n–≤–∞—à –±–∞–ª–∞–Ω—Å: ' + str(money_killer)+'‚ÇΩ',event,False)
                                                else:
                                                    snd(get_nick(usr,mention) + " –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è\n–ø–∞—Ç—Ä–æ–Ω–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å: " + str(inv['–ø–∞—Ç—Ä–æ–Ω']-1),event,False)
                                            else:
                                                snd("—É –≤–∞—Å –Ω–µ—Ç –ø–∞—Ç—Ä–æ–Ω–æ–≤.",event,True)
                                        else:
                                            snd("—É –≤–∞—Å –Ω–µ—Ç –ø–∏—Å—Ç–æ–ª–µ—Ç–∞.",event,True)
                                    elif not f:
                                        nr_other()
                            else:
                                nr()


                        elif cmd == '.–≤–∏–∫–∏':
                            if tusr:
                                if args:
                                    if ask_money(settings.wiki_cost,usr,tusr):
                                        snd(wikipedia.summary(args),event,False)
                                else:
                                    snd(".–≤–∏–∫–∏ <–Ω–∞–∑–≤–∞–Ω–∏–µ>",event,True)
                            else:
                                nr()
                        elif cmd == '.—Ä–∞–±–æ—Ç–∞—Ç—å':
                            if tusr:
                                if tusr['job']:
                                    if (int(tusr['last']) + settings.salary_cooldown) <= ctime:
                                        bal = tusr['balance']
                                        q = tusr['q']
                                        worked_num = int(tusr['worked_num']) + int(q)
                                        work_rank = int(tusr['work_rank'])
                                        money = randint(settings.min_salary,settings.max_salary)
                                        prem = None
                                        if worked_num > work_rank ** 2:
                                            work_rank +=1
                                            prem = work_rank ** 4
                                            money += prem
                                        money = money + (2  ** work_rank)
                                        money*=q
                                        money = int(money)
                                        nalog = int(money / 100 * settings.nds)
                                        was = int(settingst.find_one(name="kazna")['val'])
                                        data = dict(name='kazna',val=was+nalog)
                                        settingst.update(data, ['name'])
                                        res = money - nalog
                                        bal = give_money(res,bal,usr)
                                        data = dict(vid=usr, last=ctime,worked_num=worked_num,work_rank=work_rank)
                                        montable.update(data, ['vid'])
                                        st = "–≤—ã –ø–æ—Ä–∞–±–æ—Ç–∞–ª–∏\n—É—Ä–æ–≤–µ–Ω—å:" + str(work_rank) 
                                        st += "\n–≤–∞—à –∑–∞—Ä–∞–±–æ—Ç–æ–∫: " + str(money) + '‚ÇΩ'
                                        if prem:
                                            st += "\n–≤—ã –ø–æ–≤—ã—à–µ–Ω—ã, –ø—Ä–µ–º–∏—è: " + str(prem) + '‚ÇΩ' 
                                        st +='\n–Ω–∞–ª–æ–≥:' + str(nalog) + '‚ÇΩ'
                                        st += '\n–≤–∞—à –±–∞–ª–∞–Ω—Å: ' + str(bal) + '‚ÇΩ'
                                        snd(st,event,True)
                                    else:
                                        snd("–∫–¥ –Ω–µ –ø—Ä–æ—à–µ–ª\n—Ä–∞–±–æ—Ç–∞—Ç—å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ " + str(settings.salary_cooldown) + " —Å–µ–∫—É–Ω–¥",event,True)
                                else:
                                    snd("–≤—ã –±–µ–∑—Ä–∞–±–æ—Ç–Ω—ã–π\n.—Ä–∞–±–æ—Ç–∞ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è - –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–±–æ—Ç—É",event,True)
                            else:
                                nr()


                        elif cmd == '.—Ä–∞–Ω–¥–æ–º–≤–∏–∫–∏':
                            if tusr:
                                if ask_money(settings.random_wiki_cost,usr,tusr):
                                    r = wikipedia.random(pages=1)
                                    snd(wikipedia.summary(r),event,False)
                            else:
                                nr()


                        elif cmd == '.–≥—É–ª—è—Ç—å':
                            if tusr:
                                money_user = tusr['balance']
                                money_kazna = int(settingst.find_one(name="kazna")['val'])
                                chance = randint(0,100)
                                if chance < settings.rob_chance:
                                    snd("–≤—ã –≤—ã—à–ª–∏ –Ω–∞ —É–ª–∏—Ü—É –∏ –±–µ–∑–Ω–∞–∫–∞–∑–∞–Ω–Ω–æ –ø–æ–≥—É–ª—è–ª–∏ü§°",event,True)
                                else:
                                    if money_user > 5000:
                                        data = dict(vid=usr,balance=money_user-5000)
                                        montable.update(data, ['vid'])
                                        was = settingst.find_one(name="kazna")['val']
                                        data = dict(name='kazna',val=int(was)+5000)
                                        settingst.update(data, ['name'])
                                        snd("—É –≤–∞—Å –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –±–µ–∑–Ω–∞–∫–∞–∑–∞–Ω–Ω–æ –ø–æ–≥—É–ª—è—Ç—å\n–≤—ã –∑–∞–ø–ª–∞—Ç–∏–ª–∏ 5000‚ÇΩ —à—Ç—Ä–∞—Ñ–∞\n–≤–∞—à –±–∞–ª–∞–Ω—Å: " + str(money_user-5000) + "‚ÇΩ",event,True)
                                    else:
                                        jail(usr)
                                        data = dict(vid=usr,balance=0)
                                        montable.update(data, ['vid'])
                                        snd("—É –≤–∞—Å –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –±–µ–∑–Ω–∞–∫–∞–∑–∞–Ω–Ω–æ –ø–æ–≥—É–ª—è—Ç—å\n–≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∏–ª–æ –¥–µ–Ω–µ–≥ –Ω–∞ —É–ø–ª–∞—Ç—É —à—Ç—Ä–∞—Ñ–∞\n–≤–∞—Å –ø–æ—Å–∞–¥–∏–ª–∏\n–≤–∞—à –±–∞–ª–∞–Ω—Å: 0‚ÇΩ",event,True)
                            else:
                                nr()




                        elif cmd == '.–∫–∞–∑–Ω–∞':
                            if args:
                                if tusr:
                                    if args=="–æ–≥—Ä–∞–±–∏—Ç—å":
                                        if inv['–ø–∏—Å—Ç–æ–ª–µ—Ç']:
                                            if inv['–ø–∞—Ç—Ä–æ–Ω']>=5:
                                                money_user = tusr['balance']
                                                money_kazna = int(settingst.find_one(name="kazna")['val'])
                                                chance = randint(0,100)
                                                data = dict(vid=usr, –ø–∞—Ç—Ä–æ–Ω=inv['–ø–∞—Ç—Ä–æ–Ω']-5)
                                                inventory.update(data, ['vid'])
                                                if chance < settings.rob_chance:
                                                    money_user=give_money(money_kazna,money_user,usr)
                                                    data = dict(name='kazna',val=0)
                                                    settingst.update(data, ['name'])
                                                    snd("–≤—ã –æ–≥—Ä–∞–±–∏–ª–∏ –∫–∞–∑–Ω—É\n–≤–∞—à –±–∞–ª–∞–Ω—Å: "+str(money_user)+'‚ÇΩ',event,True)
                                                else:
                                                    data = dict(vid=usr,balance=0,last=0,job=False,worked_num=0,work_rank=1)
                                                    montable.update(data, ['vid'])
                                                    was = settingst.find_one(name="kazna")['val']
                                                    data = dict(name='kazna',val=int(was)+int(money_user))
                                                    settingst.update(data, ['name'])
                                                    jail(usr)
                                                    snd("—É –≤–∞—Å –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ–≥—Ä–∞–±–∏—Ç—å –∫–∞–∑–Ω—É\n–≤–∞—Å –ø–æ—Å–∞–¥–∏–ª–∏\n–≤—ã —É–≤–æ–ª–µ–Ω—ã —Å —Ä–∞–±–æ—Ç—ã\n–æ—Ä—É–∂–∏–µ –∫–æ–Ω—Ñ–∏—Å–∫–æ–≤–∞–Ω–æ\n–≤–∞—à –±–∞–ª–∞–Ω—Å: 0‚ÇΩ",event,True)
                                            else:
                                                snd("—É –≤–∞—Å –º–µ–Ω—å—à–µ 5 –ø–∞—Ç—Ä–æ–Ω–æ–≤.",event,True)
                                        else:
                                            snd("—É –≤–∞—Å –Ω–µ—Ç –ø–∏—Å—Ç–æ–ª–µ—Ç–∞.",event,True)
                                    else:
                                        snd("–Ω–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–º–∞–Ω–¥—ã",event,True)
                                else:
                                    nr()
                            else:
                                was = settingst.find_one(name="kazna")['val']
                                st = "–í –∫–∞–∑–Ω–µ " + str(was) + '‚ÇΩ'
                                snd(st,event,False)



                        elif cmd == '.–ø–æ–º–æ—â—å':
                            snd(help(),event,False)
                            snd(goods(),event,False)

                        elif cmd == '.–∑–∞–ª–æ–≥':
                            if tusr:
                                if args:
                                    reciever = re.findall(r'\[id(\d*)\|.*]', args)[0]
                                    reciever_t = montable.find_one(vid=reciever)
                                    if reciever_t:
                                        if reciever_t['jail']:
                                            if ask_money(settings.zalog_cost,usr,tusr):
                                                unjail(reciever)
                                                snd("–∑–∞–ª–æ–≥ –≤–Ω–µ—Å–µ–Ω\n–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å–≤–æ–±–æ–∂–¥—ë–Ω",event,False)
                                        else:
                                            snd("—ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —Ç—é—Ä—å–º–µ",event,True)
                                    else:
                                        nr_other()
                                else:
                                    snd(".–∑–∞–ª–æ–≥ @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",event,True)

                            else:
                                nr()

                        elif cmd == '.—Ä–µ–≥':
                            if tusr:
                                snd("–≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã ‚ö†",event,True)
                            else:
                                user = vk.users.get(user_ids=usr)[0]
                                name = user['first_name']
                                sname = user['last_name']
                                montable.insert(dict(vid=usr,balance=0,q=1.0,last=0,job=False,gay=1337,mention=True,worked_num=0,work_rank=1,name=name,sname=sname,jail=False))
                                inventory.insert(dict(vid=usr,–ø–∏—Å—Ç–æ–ª–µ—Ç=0,–ø–∞—Ç—Ä–æ–Ω=0,—Å–ª–∏—Ç–æ–∫999=0))
                                snd("–í—ã –±—ã–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã ‚úÖ",event,True)

                        elif cmd == '.–∑–∞–ø–ª–∞—Ç–∏—Ç—å':
                            if tusr:
                                if args:
                                    
                                    reciever = re.findall(r'\[id(\d*)\|.*]', args)[0]
                                    reciever_t = montable.find_one(vid=reciever)
                                    try:
                                        money = int(args.split(" ", 1)[1])
                                    except Exception as e:
                                        money = None
                                    if money:
                                        bal_sender = tusr['balance']
                                        bal_reciever = reciever_t['balance']
                                        if reciever:
                                            if bal_sender >= money: 
                                                bal_sender = take_money(money,bal_sender,usr)
                                                give_money(money,bal_reciever,reciever)
                                                snd("–≤—ã –∑–∞–ø–ª–∞—Ç–∏–ª–∏ " + str(money) + "‚ÇΩ\n–≤–∞—à –±–∞–ª–∞–Ω—Å: " + str(bal_sender)+'‚ÇΩ',event,False)
                                            else:
                                                snd("–≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ üí∞\n–≤–∞—à –±–∞–ª–∞–Ω—Å: " + str(bal_sender)+'‚ÇΩ',event,True)
                                        else:
                                            nr_other()
                                    else:
                                        snd(".–∑–∞–ø–ª–∞—Ç–∏—Ç—å @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <—Å—É–º–º–∞>",event,True)
                                else:
                                    snd(".–∑–∞–ø–ª–∞—Ç–∏—Ç—å @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <—Å—É–º–º–∞>",event,True)
                            else:
                                nr()


                        elif cmd == '.—Ç–æ–≤–∞—Ä—ã':
                                st = goods()
                                snd(st,event,True)

                        elif cmd == '.–∫—É–ø–∏—Ç—å':
                            if tusr:
                                if args:
                                    tovar = tovary.find_one(name=args)
                                    if tovar:
                                        cost = tovar["cost"]
                                        bal = tusr['balance']
                                        if bal>=cost:
                                            bal = take_money(cost,bal,usr)
                                            snd(tovar["exp"] + "\n–≤–∞—à –±–∞–ª–∞–Ω—Å: " + str(bal)+'‚ÇΩ',event,True)
                                            if tovar['act']>0:
                                                act(int(tovar['act']),usr,tusr,event)
                                        else:
                                            snd("–≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ üí∞\n–≤–∞—à –±–∞–ª–∞–Ω—Å: " + str(bal)+'‚ÇΩ',event,True)
                                    else:
                                        snd("–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω ‚ö†",event,True)
                                else:
                                    snd(".–∫—É–ø–∏—Ç—å <–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞>",event,True)
                            else:
                                nr()


                        elif cmd == '.–≥–µ–π':
                            tusr
                            if tusr:
                                if tusr["gay"] == 1337:
                                    gay = randint(0,101)
                                    data = dict(vid=usr, gay=gay)
                                    montable.update(data, ['vid'])
                                    snd("–≤—ã –≥–µ–π –Ω–∞ " + str(gay) + "%",event,True)
                                else:
                                    snd("–Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–º–µ–Ω—è–ª–æ—Å—å –≤—ã –≥–µ–π –Ω–∞ " + str(tusr['gay']) + "%",event,True)
                            else:
                                nr()


                        elif cmd == '.–±–∞–ª–∞–Ω—Å':
                            if tusr:
                                snd("–≤–∞—à –±–∞–ª–∞–Ω—Å: " + str(tusr['balance']) + "‚ÇΩ",event,True)
                            else:
                                nr()

                        elif cmd == '.—Ä–∞–±–æ—Ç–∞':
                            if args:
                                if tusr:
                                    if args == "—É—Å—Ç—Ä–æ–∏—Ç—å—Å—è":
                                        if montable.find_one(vid=usr)["job"] == True:
                                            snd("–í—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ ‚ö†",event,True)
                                        else:
                                            data = dict(vid=usr, job=True,worked_num=0,work_rank=1)
                                            montable.update(data, ['vid'])
                                            snd("–í—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É üíº",event,True)

                                    elif args == "—É–≤–æ–ª–∏—Ç—å—Å—è":
                                        if montable.find_one(vid=usr)["job"] == False:
                                            snd("–í—ã –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ ‚ö†",event,True)
                                        else:
                                            data = dict(vid=usr, job=False, worked_num=0, work_rank=1)
                                            montable.update(data, ['vid'])
                                            snd("–í—ã —É–≤–æ–ª–∏–ª–∏—Å—å —Å —Ä–∞–±–æ—Ç—ã üóΩ",event,True)
                                    else:
                                        snd("\n.—Ä–∞–±–æ—Ç–∞ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è\n.—Ä–∞–±–æ—Ç–∞ —É–≤–æ–ª–∏—Ç—å—Å—è",event,True)
                                else:
                                    nr()
                            else:
                                snd("\n.—Ä–∞–±–æ—Ç–∞ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è\n.—Ä–∞–±–æ—Ç–∞ —É–≤–æ–ª–∏—Ç—å—Å—è",event,True)
    
                        elif cmd == '.set':
                            if int(usr) in ADMINS:
                                if args:
                                    if " " in args:
                                        var,val = args.split(" ",1)
                                        if settingst.find_one(name=var):
                                            data = dict(name=var, val=val)
                                            settingst.update(data, ['name'])
                                            initialize_settings()
                                            snd("–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–º–µ–Ω–µ–Ω—ã",event,True)
                                            print(Fore.GREEN + '–ó–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ' + var + ' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ ' + val)
                                        else:
                                            snd("–Ω–µ—Ç —Ç–∞–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",event,True)
                                    else:
                                        var = settingst.find_one(name=args)
                                        if var:
                                            snd("–∑–Ω–∞—á–µ–Ω–∏–µ: " + str(var['val']),event,True)
                                        else:
                                            snd("–Ω–µ—Ç —Ç–∞–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",event,True)
                                else:
                                    snd(".set <> <>",event,True)

                        else:
                            snd('–∫–æ–º–º–∞–Ω–¥—ã "' + cmd + '" –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n–æ—Ç–ø—Ä–∞–≤—å—Ç–µ .–ø–æ–º–æ—â—å',event,True)

        except Exception as e:
            exc_type, exc_obj, exc_tb = sys.exc_info()
            fname = os.path.split(exc_tb.tb_frame.f_code.co_filename)[1]
            if from_chat:
                log(str(e),main_log_name)
                snd("–æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–º–∞–Ω–¥—ã üêû\n" + str(e) +'\n' + fname + '\n—Å—Ç—Ä–æ–∫–∞: ' + str(exc_tb.tb_lineno), event,True)
            print(Fore.RED + str(e) + '\n' + fname + '\n—Å—Ç—Ä–æ–∫–∞: ' + str(exc_tb.tb_lineno))
 except Exception as e:
    print(Back.WHITE + Fore.RED + str(e))
    log(str(e),main_log_name)
    time.sleep(1)
